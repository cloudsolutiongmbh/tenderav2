/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TodosRouteImport } from './routes/todos'
import { Route as TemplatesRouteImport } from './routes/templates'
import { Route as ProjekteRouteImport } from './routes/projekte'
import { Route as ProfilRouteImport } from './routes/profil'
import { Route as OrganisationRouteImport } from './routes/organisation'
import { Route as IndexRouteImport } from './routes/index'

const TodosRoute = TodosRouteImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => rootRouteImport,
} as any)
const TemplatesRoute = TemplatesRouteImport.update({
  id: '/templates',
  path: '/templates',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjekteRoute = ProjekteRouteImport.update({
  id: '/projekte',
  path: '/projekte',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfilRoute = ProfilRouteImport.update({
  id: '/profil',
  path: '/profil',
  getParentRoute: () => rootRouteImport,
} as any)
const OrganisationRoute = OrganisationRouteImport.update({
  id: '/organisation',
  path: '/organisation',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/organisation': typeof OrganisationRoute
  '/profil': typeof ProfilRoute
  '/projekte': typeof ProjekteRoute
  '/templates': typeof TemplatesRoute
  '/todos': typeof TodosRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/organisation': typeof OrganisationRoute
  '/profil': typeof ProfilRoute
  '/projekte': typeof ProjekteRoute
  '/templates': typeof TemplatesRoute
  '/todos': typeof TodosRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/organisation': typeof OrganisationRoute
  '/profil': typeof ProfilRoute
  '/projekte': typeof ProjekteRoute
  '/templates': typeof TemplatesRoute
  '/todos': typeof TodosRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/organisation'
    | '/profil'
    | '/projekte'
    | '/templates'
    | '/todos'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/organisation' | '/profil' | '/projekte' | '/templates' | '/todos'
  id:
    | '__root__'
    | '/'
    | '/organisation'
    | '/profil'
    | '/projekte'
    | '/templates'
    | '/todos'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrganisationRoute: typeof OrganisationRoute
  ProfilRoute: typeof ProfilRoute
  ProjekteRoute: typeof ProjekteRoute
  TemplatesRoute: typeof TemplatesRoute
  TodosRoute: typeof TodosRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/templates': {
      id: '/templates'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof TemplatesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projekte': {
      id: '/projekte'
      path: '/projekte'
      fullPath: '/projekte'
      preLoaderRoute: typeof ProjekteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profil': {
      id: '/profil'
      path: '/profil'
      fullPath: '/profil'
      preLoaderRoute: typeof ProfilRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/organisation': {
      id: '/organisation'
      path: '/organisation'
      fullPath: '/organisation'
      preLoaderRoute: typeof OrganisationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrganisationRoute: OrganisationRoute,
  ProfilRoute: ProfilRoute,
  ProjekteRoute: ProjekteRoute,
  TemplatesRoute: TemplatesRoute,
  TodosRoute: TodosRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
